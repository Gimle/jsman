<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../../template/methodWrapper.xsl"?>
<method name="call" parent="Function" xmlns="http://www.jsman.net/xsd/manual"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.jsman.net/xsd/manual ../../../../schema/jsman-manual.xsd">
	<lead>
		<p>call</p>
	</lead>
	<description>
		<p>Function.call(<params/>)</p>
	</description>
	<parameters>
		<parameter name="this" type="object" optional="false"></parameter>
		<parameter name="arg, â€¦" type="mixed" optional="true"></parameter>
	</parameters>
	<examples>
		<example>
			<heading>call example</heading>
			<code>
				var f = function () {
					return this;
				};
				console.log(f.call(location.hash));  // Sets a custom this value for the function.
			</code>
		</example>
		<example>
			<heading>call example</heading>
			<code>
				var getName = function () {
					return this.name.first + ' ' + this.name.last;
				}

				var lars = {
					name: {
						first: 'Lars',
						last: 'Doe'
					}
				};

				console.log(getName.call(lars));
			</code>
		</example>
		<example>
			<heading>call example</heading>
			<code>
				var getName = function (lastFirst, includeAge) {
					var result = '';
					if (lastFirst) {
						result = this.name.last + ', ' + this.name.first;
					}
					else {
						result = this.name.first + ' ' + this.name.last;
					}
					if (includeAge) {
						result += ' (' + this.age + ')';
					}
					return result;
				}

				var lars = {
					name: {
						first: 'Lars',
						last: 'Doe'
					},
					age: 20
				};

				console.log(getName.call(lars));                // Lars Doe
				console.log(getName.call(lars, true));          // Doe, Lars
				console.log(getName.call(lars, false, true));   // Lars Doe (20)
			</code>
		</example>
	</examples>
	<external>
		<mdn href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function/call">Function.call method</mdn>
	</external>

</method>
