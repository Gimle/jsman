<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../template/objectWrapper.xsl"?>
<object name="Boolean" xmlns="http://www.jsman.net/xsd/manual"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.jsman.net/xsd/manual ../../../schema/jsman-manual.xsd">
	<lead>
		<p>Boolean â€” The Boolean object is an object wrapper for a boolean value.</p>
	</lead>
	<description>
		<p>new Boolean(<params/>)</p>
	</description>
	<parameters>
		<parameter name="bool" type="mixed" optional="false"/>
	</parameters>
	<examples>
		<example>
			<heading>boolean example</heading>
			<p>When creating a boolean object, you have to check the value of the object. The object itself will always return true.</p>
			<code>
				var b = new Boolean(true); // Create a new boolean object.
				if (b.valueOf()) {
					console.log('The value of b is true.');
				}
			</code>
			<p>This however does not apply when working with boolean primitives.</p>
			<code>
				var b = true; // Create a new boolean primitive.
				if (b) {
					console.log('The value of b is true.');
				}
			</code>
		</example>
		<example>
			<heading>boolean example</heading>
			<p>Convert a non-boolean value to a boolean primitive.</p>
			<code>
				bool = Boolean('false');
				console.log(bool); // Will return true.

				bool = Boolean(0);
				console.log(bool); // Will return false.
			</code>
		</example>
	</examples>
	<see-also>
		<ul>
			<li><p><xref href="manual/2. Primitives/Primitives.xml">Primitives</xref></p></li>
		</ul>
	</see-also>
	<external>
		<mdn href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean">Boolean object</mdn>
	</external>
</object>
